library(shiny)

ui <- fluidPage(
  titlePanel("Anuj and Ranish Lokta Volterra Equations"),
  shinyServer(function(input, output) 
    sidebarLayout(
      sidebarPanel(
        sliderInput("alpha",
                    "Value of alpha:",
                    min = 0.1,
                    max = 0.9,
                    value = 0.2)
        ,
        sliderInput("beta",
                    "Value of beta:",
                    min = 0.001,
                    max = 0.009,
                    value = 0.002)
        ,
        sliderInput("gamma",
                    "Value of gamma:",
                    min = 0.01,
                    max = 0.90,
                    value = 0.04)
        ,
        sliderInput("delta",
                    "Value of delta:",
                    min = 0.0001,
                    max = 0.0009,
                    value = 0.0004)
      ),
      
      
        
        
        # Show a plot of the generated distribution
        mainPanel(
          plotOutput("distPlot1"),
          plotOutput("distPlot2")
          
          
        )
      )),
  myOutput <- reactive(
      
    
    parameters <- c(alpha =  inputPanel("alpha"),
                     beta = inputPanel("beta"),
                     gamma=inputPanel("gamma"),
                     delta=inputPanel("delta")),
                                      
      state <- c( H = 100+pH, P = 40+pP),
      pH=runif(1,0,1),
      pP=runif(1,0,1),
      
      
      library("deSolve"),
      
      Lotka<-function(t,state, parameters) 
        with(as.list(c(state,parameters),{
          # rate of change
          dH <- input$alpha*H-input$beta*H*P
          dP <- -input$gamma*P + input$delta * H * P 
          #    dZ <- b*X*Y + X*Z - Z     
          # return the rate of change
          list(c(dH, dP)) 
          out <- ode( y = state,times = times, func = Lotka, parms = parameters)
          return(out)
          distPlot1 <- renderPlot({
            
            plot(myOutput()$out[,"H"],xlab = "time", ylab = "H",col="red")
            line(myOutput()$out[,"P"],xlab = "time", ylab = "P",col="blue")
            mtext(outer = TRUE, side = 3, "Lokta Voltera test", cex = 1.5)
            
            
            # generate bins based on input$bins from ui.R
            # x    <- faithful[, 2] 
            # bins <- seq(min(x), max(x), length.out = input$bins + 1)
            
            # draw the histogram with the specified number of bins
            #hist(x, breaks = bins, col = 'darkgray', border = 'white')
          })
          
          distPlot2 <- renderPlot({
            
            plot(x=myOutput()$out[,"H"],y=myOutput()$out[,"P"],xlab = "H", ylab = "P",col="yellow")
            
            
          })
          shinyApp(ui = ui, server = server)
          
          
          
          
          
          
        
      
      
